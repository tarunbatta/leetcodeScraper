{"number":"894","title":"All Possible Full Binary Trees","url":"https://leetcode.com/problems/all-possible-full-binary-trees","difficulty":"Medium","question":"A full binary tree&#xA0;is a binary tree where each node has exactly 0 or 2&#xA0;children.\n\nReturn a list of all possible full binary trees with N nodes.&#xA0; Each element of the answer is the root node of one possible tree.\n\nEach node of each&#xA0;tree in the answer must have node.val = 0.\n\nYou may return the final list of trees in any order.\n\n&#xA0;\n\nExample 1:\n\nInput: 7\nOutput: [[0,0,0,null,null,0,0,null,null,0,0],[0,0,0,null,null,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,null,null,null,null,0,0],[0,0,0,0,0,null,null,0,0]]\nExplanation:\n\n\n\n&#xA0;\n\nNote:\n\n\n\t1 &lt;= N &lt;= 20\n\n","code":"undefined/** * Definition for a binary tree node. * public class TreeNode { *     public int val; *     public TreeNode left; *     public TreeNode right; *     public TreeNode(int x) { val = x; } * } */public class Solution {    public IList<TreeNode> AllPossibleFBT(int N) {            }}"}