{"number":"957","title":"Prison Cells After N Days","url":"https://leetcode.com/problems/prison-cells-after-n-days","difficulty":"Medium","question":"There are 8 prison cells in a row, and each cell is either occupied or vacant.\n\nEach day, whether the cell is occupied or vacant changes according to the following rules:\n\n\n\tIf a cell has two adjacent neighbors that are both occupied or both vacant,&#xA0;then the cell becomes occupied.\n\tOtherwise, it becomes vacant.\n\n\n(Note that because the prison is a row, the first and the last cells in the row can&apos;t have two adjacent neighbors.)\n\nWe describe the current state of the prison&#xA0;in the following way:&#xA0;cells[i] == 1 if the i-th cell is occupied, else cells[i] == 0.\n\nGiven the initial state of the prison, return the state of the prison after N days (and N such changes described above.)\n\n&#xA0;\n\n\n\n\n\n\n\nExample 1:\n\nInput: cells = [0,1,0,1,1,0,0,1], N = 7\nOutput: [0,0,1,1,0,0,0,0]\nExplanation: \nThe following table summarizes the state of the prison on each day:\nDay 0: [0, 1, 0, 1, 1, 0, 0, 1]\nDay 1: [0, 1, 1, 0, 0, 0, 0, 0]\nDay 2: [0, 0, 0, 0, 1, 1, 1, 0]\nDay 3: [0, 1, 1, 0, 0, 1, 0, 0]\nDay 4: [0, 0, 0, 0, 0, 1, 0, 0]\nDay 5: [0, 1, 1, 1, 0, 1, 0, 0]\nDay 6: [0, 0, 1, 0, 1, 1, 0, 0]\nDay 7: [0, 0, 1, 1, 0, 0, 0, 0]\n\n\n\n\nExample 2:\n\nInput: cells = [1,0,0,1,0,0,1,0], N = 1000000000\nOutput: [0,0,1,1,1,1,1,0]\n\n\n&#xA0;\n\nNote:\n\n\n\tcells.length == 8\n\tcells[i] is in {0, 1}\n\t1 &lt;= N &lt;= 10^9\n\n\n\n","code":"undefinedpublic class Solution {    public int[] PrisonAfterNDays(int[] cells, int N) {            }}"}