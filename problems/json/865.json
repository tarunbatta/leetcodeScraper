{
    "number": "865",
    "title": "Smallest Subtree with all the Deepest Nodes",
    "url": "https://leetcode.com/problems/smallest-subtree-with-all-the-deepest-nodes",
    "difficulty": "Medium",
    "question": "Given a binary tree rooted at root, the depth of each node is the shortest distance to the root.\n\nA node is deepest if it has the largest depth possible among&#xA0;any node in the entire tree.\n\nThe subtree of a node is that node, plus the set of all descendants of that node.\n\nReturn the node with the largest depth such that it contains all the deepest nodes in its subtree.\n\n&#xA0;\n\nExample 1:\n\nInput: [3,5,1,6,2,0,8,null,null,7,4]\nOutput: [2,7,4]\nExplanation:\n\n\n\nWe return the node with value 2, colored in yellow in the diagram.\nThe nodes colored in blue are the deepest nodes of the tree.\nThe input &quot;[3, 5, 1, 6, 2, 0, 8, null, null, 7, 4]&quot; is a serialization of the given tree.\nThe output &quot;[2, 7, 4]&quot; is a serialization of the subtree rooted at the node with value 2.\nBoth the input and output have TreeNode type.\n\n\n&#xA0;\n\nNote:\n\n\n\tThe number of nodes in the tree will be between 1 and 500.\n\tThe values of each node are unique.\n\n",
    "code": "undefined/** * Definition for a binary tree node. * public class TreeNode { *     public int val; *     public TreeNode left; *     public TreeNode right; *     public TreeNode(int x) { val = x; } * } */public class Solution {    public TreeNode SubtreeWithAllDeepest(TreeNode root) {            }}"
}