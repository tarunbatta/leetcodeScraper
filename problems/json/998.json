{"number":"998","title":"Maximum Binary Tree II","url":"https://leetcode.com/problems/maximum-binary-tree-ii","difficulty":"Medium","question":"We are given the root&#xA0;node of a maximum tree: a tree where every node has a value greater than any other value in its subtree.\n\nJust as in the previous problem, the given tree&#xA0;was constructed from an list&#xA0;A&#xA0;(root = Construct(A)) recursively with the following&#xA0;Construct(A) routine:\n\n\n\tIf A is empty, return null.\n\tOtherwise, let A[i] be the largest element of A.&#xA0; Create a root node with value A[i].\n\tThe left child of root will be Construct([A[0], A[1], ..., A[i-1]])\n\tThe right child of root&#xA0;will be Construct([A[i+1], A[i+2], ..., A[A.length - 1]])\n\tReturn root.\n\n\nNote that we were not given A directly, only a root node root = Construct(A).\n\nSuppose B is a copy of A with the value val appended to it.&#xA0; It is guaranteed that B has unique values.\n\nReturn Construct(B).\n\n&#xA0;\n\nExample 1:\n\n\n\nInput: root = [4,1,3,null,null,2], val = 5\nOutput: [5,4,null,1,3,null,null,2]\nExplanation: A = [1,4,2,3], B = [1,4,2,3,5]\n\n\n\nExample 2:\n\n\nInput: root = [5,2,4,null,1], val = 3\nOutput: [5,2,4,null,1,null,3]\nExplanation: A = [2,1,5,4], B = [2,1,5,4,3]\n\n\n\nExample 3:\n\n\nInput: root = [5,2,3,null,1], val = 4\nOutput: [5,2,4,null,1,3]\nExplanation: A = [2,1,5,3], B = [2,1,5,3,4]\n\n\n&#xA0;\n\n\n\nNote:\n\n\n\t1 &lt;= B.length &lt;= 100\n","code":"undefined/** * Definition for a binary tree node. * public class TreeNode { *     public int val; *     public TreeNode left; *     public TreeNode right; *     public TreeNode(int x) { val = x; } * } */public class Solution {    public TreeNode InsertIntoMaxTree(TreeNode root, int val) {            }}"}