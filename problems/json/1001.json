{
    "number": "1001",
    "title": "Grid Illumination",
    "url": "https://leetcode.com/problems/grid-illumination",
    "difficulty": "Hard",
    "question": "On a N x N grid of cells, each cell (x, y) with 0 &lt;= x &lt; N and 0 &lt;= y &lt; N has a lamp.\n\nInitially, some number of lamps are on.&#xA0; lamps[i] tells us the location of the i-th lamp that is on.&#xA0; Each lamp that is on illuminates every square on its x-axis, y-axis, and both diagonals (similar to a Queen in chess).\n\nFor the i-th query&#xA0;queries[i] = (x, y), the answer to the query is 1 if the cell (x, y) is illuminated, else 0.\n\nAfter each query (x, y) [in the order given by queries], we turn off any&#xA0;lamps that are at cell (x, y)&#xA0;or are adjacent 8-directionally (ie., share a corner or edge with cell (x, y).)\n\nReturn an array of answers.&#xA0; Each&#xA0;value answer[i] should be equal to the answer of the i-th query queries[i].\n\n&#xA0;\n\nExample 1:\n\nInput: N = 5, lamps = [[0,0],[4,4]], queries = [[1,1],[1,0]]\nOutput: [1,0]\nExplanation: \nBefore performing the first query we have both lamps [0,0] and [4,4] on.\nThe grid representing which cells are lit looks like this, where [0,0] is the top left corner, and [4,4] is the bottom right corner:\n1 1 1 1 1\n1 1 0 0 1\n1 0 1 0 1\n1 0 0 1 1\n1 1 1 1 1\nThen the query at [1, 1] returns 1 because the cell is lit.  After this query, the lamp at [0, 0] turns off, and the grid now looks like this:\n1 0 0 0 1\n0 1 0 0 1\n0 0 1 0 1\n0 0 0 1 1\n1 1 1 1 1\nBefore performing the second query we have only the lamp [4,4] on.  Now the query at [1,0] returns 0, because the cell is no longer lit.\n\n\n&#xA0;\n\nNote:\n\n\n\t1 &lt;= N &lt;= 10^9\n\t0 &lt;= lamps.length &lt;= 20000\n\t0 &lt;= queries.length &lt;= 20000\n\tlamps[i].length == queries[i].length == 2\n",
    "code": "undefinedpublic class Solution {    public int[] GridIllumination(int N, int[][] lamps, int[][] queries) {            }}"
}