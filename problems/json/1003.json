{
    "number": "1003",
    "title": "Check If Word Is Valid After Substitutions",
    "url": "https://leetcode.com/problems/check-if-word-is-valid-after-substitutions",
    "difficulty": "Medium",
    "question": "We are given that the string &quot;abc&quot; is valid.\n\nFrom any valid string V, we may split&#xA0;V into two pieces X and Y such that X + Y (X concatenated with Y) is equal to V.&#xA0; (X or Y may be empty.)&#xA0; Then, X + &quot;abc&quot; + Y is also valid.\n\nIf for example S = &quot;abc&quot;, then examples of valid strings are: &quot;abc&quot;, &quot;aabcbc&quot;, &quot;abcabc&quot;, &quot;abcabcababcc&quot;.&#xA0; Examples of invalid&#xA0;strings are: &quot;abccba&quot;, &quot;ab&quot;, &quot;cababc&quot;, &quot;bac&quot;.\n\nReturn true if and only if the given string&#xA0;S&#xA0;is valid.\n\n&#xA0;\n\nExample 1:\n\nInput: &quot;aabcbc&quot;\nOutput: true\nExplanation: \nWe start with the valid string &quot;abc&quot;.\nThen we can insert another &quot;abc&quot; between &quot;a&quot; and &quot;bc&quot;, resulting in &quot;a&quot; + &quot;abc&quot; + &quot;bc&quot; which is &quot;aabcbc&quot;.\n\n\n\nExample 2:\n\nInput: &quot;abcabcababcc&quot;\nOutput: true\nExplanation: \n&quot;abcabcabc&quot; is valid after consecutive insertings of &quot;abc&quot;.\nThen we can insert &quot;abc&quot; before the last letter, resulting in &quot;abcabcab&quot; + &quot;abc&quot; + &quot;c&quot; which is &quot;abcabcababcc&quot;.\n\n\n\nExample 3:\n\nInput: &quot;abccba&quot;\nOutput: false\n\n\n\nExample 4:\n\nInput: &quot;cababc&quot;\nOutput: false\n\n&#xA0;\n\n\n\n\nNote:\n\n\n\t1 &lt;= S.length &lt;= 20000\n\tS[i] is &apos;a&apos;, &apos;b&apos;, or &apos;c&apos;\n\n\n\n\n\n&#xA0;\n\n\n",
    "code": "undefinedpublic class Solution {    public bool IsValid(string S) {            }}"
}