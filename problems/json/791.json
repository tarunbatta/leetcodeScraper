{
    "number": "791",
    "title": "Custom Sort String",
    "url": "https://leetcode.com/problems/custom-sort-string",
    "difficulty": "Medium",
    "question": "S and T are strings composed of lowercase letters. In S, no letter occurs more than once.\n\nS was sorted in some custom order previously. We want to permute the characters of T so that they match the order that S was sorted. More specifically, if x occurs before y in S, then x should occur before y in the returned string.\n\nReturn any permutation of T (as a string) that satisfies this property.\n\nExample :\nInput: \nS = &quot;cba&quot;\nT = &quot;abcd&quot;\nOutput: &quot;cbad&quot;\nExplanation: \n&quot;a&quot;, &quot;b&quot;, &quot;c&quot; appear in S, so the order of &quot;a&quot;, &quot;b&quot;, &quot;c&quot; should be &quot;c&quot;, &quot;b&quot;, and &quot;a&quot;. \nSince &quot;d&quot; does not appear in S, it can be at any position in T. &quot;dcba&quot;, &quot;cdba&quot;, &quot;cbda&quot; are also valid outputs.\n\n\n&#xA0;\n\nNote:\n\n\n\tS has length at most 26, and no character is repeated in S.\n\tT has length at most 200.\n\tS and T consist of lowercase letters only.\n\n",
    "code": "undefinedpublic class Solution {    public string CustomSortString(string S, string T) {            }}"
}