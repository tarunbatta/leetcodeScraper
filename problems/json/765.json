{
    "number": "765",
    "title": "Couples Holding Hands",
    "url": "https://leetcode.com/problems/couples-holding-hands",
    "difficulty": "Hard",
    "question": "\nN couples sit in 2N seats arranged in a row and want to hold hands.  We want to know the minimum number of swaps so that every couple is sitting side by side.  A swap consists of choosing any two people, then they stand up and switch seats. \n\nThe people and seats are represented by an integer from 0 to 2N-1, the couples are numbered in order, the first couple being (0, 1), the second couple being (2, 3), and so on with the last couple being (2N-2, 2N-1).\n\nThe couples&apos; initial seating is given by row[i] being the value of the person who is initially sitting in the i-th seat.\n\nExample 1:Input: row = [0, 2, 1, 3]\nOutput: 1\nExplanation: We only need to swap the second (row[1]) and third (row[2]) person.\n\n\nExample 2:Input: row = [3, 2, 0, 1]\nOutput: 0\nExplanation: All couples are already seated side by side.\n\n\n\nNote:\n \n len(row) is even and in the range of [4, 60].\n row is guaranteed to be a permutation of 0...len(row)-1.\n",
    "code": "undefinedpublic class Solution {    public int MinSwapsCouples(int[] row) {            }}"
}