{"number":"1022","title":"Sum of Root To Leaf Binary Numbers","url":"https://leetcode.com/problems/sum-of-root-to-leaf-binary-numbers","difficulty":"Easy","question":"Given a binary tree, each node has value 0&#xA0;or 1.&#xA0; Each root-to-leaf path represents a binary number starting with the most significant bit.&#xA0; For example, if the path is 0 -&gt; 1 -&gt; 1 -&gt; 0 -&gt; 1, then this could represent 01101 in binary, which is 13.\n\nFor all leaves in the tree, consider the numbers represented by the path&#xA0;from the root to that leaf.\n\nReturn the sum of these numbers.\n\n&#xA0;\n\nExample 1:\n\n\n\nInput: [1,0,1,0,1,0,1]\nOutput: 22\nExplanation: (100) + (101) + (110) + (111) = 4 + 5 + 6 + 7 = 22\n\n\n&#xA0;\n\nNote:\n\n\n\tThe number of nodes in the tree is between 1 and 1000.\n\tnode.val is 0 or 1.\n\tThe answer will not exceed 2^31 - 1.\n\n","code":"undefined/** * Definition for a binary tree node. * public class TreeNode { *     public int val; *     public TreeNode left; *     public TreeNode right; *     public TreeNode(int x) { val = x; } * } */public class Solution {    public int SumRootToLeaf(TreeNode root) {            }}"}