{
    "number": "782",
    "title": "Transform to Chessboard",
    "url": "https://leetcode.com/problems/transform-to-chessboard",
    "difficulty": "Hard",
    "question": "An N x N board contains only 0s and 1s. In each move, you can swap any 2 rows with each other, or any 2 columns with each other.\n\nWhat is the minimum number of moves to transform the board into a &quot;chessboard&quot; - a board where no 0s and no 1s are 4-directionally adjacent? If the task is impossible, return -1.\n\nExamples:\nInput: board = [[0,1,1,0],[0,1,1,0],[1,0,0,1],[1,0,0,1]]\nOutput: 2\nExplanation:\nOne potential sequence of moves is shown below, from left to right:\n\n0110     1010     1010\n0110 --&gt; 1010 --&gt; 0101\n1001     0101     1010\n1001     0101     0101\n\nThe first move swaps the first and second column.\nThe second move swaps the second and third row.\n\n\nInput: board = [[0, 1], [1, 0]]\nOutput: 0\nExplanation:\nAlso note that the board with 0 in the top left corner,\n01\n10\n\nis also a valid chessboard.\n\nInput: board = [[1, 0], [1, 0]]\nOutput: -1\nExplanation:\nNo matter what sequence of moves you make, you cannot end with a valid chessboard.\n\n\nNote:\n\n\n\tboard will have the same number of rows and columns, a number in the range [2, 30].\n\tboard[i][j] will be only 0s or 1s.\n\n",
    "code": "undefinedpublic class Solution {    public int MovesToChessboard(int[][] board) {            }}"
}