{"number":"1029","title":"Two City Scheduling","url":"https://leetcode.com/problems/two-city-scheduling","difficulty":"Easy","question":"There are 2N people a company is planning to interview. The cost of flying the i-th person to city A is costs[i][0], and the cost of flying the i-th person to city B is costs[i][1].\n\nReturn the minimum cost to fly every person to a city such that exactly N people arrive in each city.\n\n&#xA0;\n\nExample 1:\n\nInput: [[10,20],[30,200],[400,50],[30,20]]\nOutput: 110\nExplanation: \nThe first person goes to city A for a cost of 10.\nThe second person goes to city A for a cost of 30.\nThe third person goes to city B for a cost of 50.\nThe fourth person goes to city B for a cost of 20.\n\nThe total minimum cost is 10 + 30 + 50 + 20 = 110 to have half the people interviewing in each city.\n\n\n&#xA0;\n\nNote:\n\n\n\t1 &lt;= costs.length &lt;= 100\n\tIt is guaranteed that costs.length is even.\n\t1 &lt;= costs[i][0], costs[i][1] &lt;= 1000\n","code":"undefinedpublic class Solution {    public int TwoCitySchedCost(int[][] costs) {            }}"}