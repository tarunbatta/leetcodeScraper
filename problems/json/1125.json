{
    "number": "1125",
    "title": "Smallest Sufficient Team",
    "url": "https://leetcode.com/problems/smallest-sufficient-team",
    "difficulty": "Hard",
    "question": "In a project, you have a list of required skills req_skills,&#xA0;and a list of people.&#xA0; The i-th person people[i]&#xA0;contains a list of skills that person has.\n\nConsider a sufficient team: a set of people such that for every required skill in req_skills, there is at least one person in the team who has that skill.&#xA0; We can represent these teams by the index of each person: for example, team = [0, 1, 3] represents the people with skills people[0], people[1], and people[3].\n\nReturn any&#xA0;sufficient team of the smallest possible size, represented by the index of each person.\n\nYou may return the answer in any order.&#xA0; It is guaranteed an answer exists.\n\n&#xA0;\nExample 1:\nInput: req_skills = [&quot;java&quot;,&quot;nodejs&quot;,&quot;reactjs&quot;], people = [[&quot;java&quot;],[&quot;nodejs&quot;],[&quot;nodejs&quot;,&quot;reactjs&quot;]]\nOutput: [0,2]\nExample 2:\nInput: req_skills = [&quot;algorithms&quot;,&quot;math&quot;,&quot;java&quot;,&quot;reactjs&quot;,&quot;csharp&quot;,&quot;aws&quot;], people = [[&quot;algorithms&quot;,&quot;math&quot;,&quot;java&quot;],[&quot;algorithms&quot;,&quot;math&quot;,&quot;reactjs&quot;],[&quot;java&quot;,&quot;csharp&quot;,&quot;aws&quot;],[&quot;reactjs&quot;,&quot;csharp&quot;],[&quot;csharp&quot;,&quot;math&quot;],[&quot;aws&quot;,&quot;java&quot;]]\nOutput: [1,2]\n\n&#xA0;\nConstraints:\n\n\n\t1 &lt;= req_skills.length &lt;= 16\n\t1 &lt;= people.length &lt;= 60\n\t1 &lt;= people[i].length, req_skills[i].length, people[i][j].length&#xA0;&lt;= 16\n\tElements of req_skills and people[i] are (respectively) distinct.\n\treq_skills[i][j], people[i][j][k] are&#xA0;lowercase English letters.\n\tEvery skill in people[i]&#xA0;is a skill in req_skills.\n\tIt is guaranteed a sufficient team exists.\n\n",
    "code": "undefinedpublic class Solution {    public int[] SmallestSufficientTeam(string[] req_skills, IList<IList<string>> people) {            }}"
}