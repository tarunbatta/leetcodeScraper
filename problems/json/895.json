{
    "number": "895",
    "title": "Maximum Frequency Stack",
    "url": "https://leetcode.com/problems/maximum-frequency-stack",
    "difficulty": "Hard",
    "question": "Implement FreqStack, a class which simulates the operation of a stack-like data structure.\n\nFreqStack&#xA0;has two functions:\n\n\n\tpush(int x), which pushes an integer x onto the stack.\n\tpop(), which removes and returns the most frequent element in the stack.\n\t\n\t\tIf there is a tie for most frequent element, the element closest to the top of the stack is removed and returned.\n\t\n\t\n\n\n&#xA0;\n\nExample 1:\n\nInput: \n[&quot;FreqStack&quot;,&quot;push&quot;,&quot;push&quot;,&quot;push&quot;,&quot;push&quot;,&quot;push&quot;,&quot;push&quot;,&quot;pop&quot;,&quot;pop&quot;,&quot;pop&quot;,&quot;pop&quot;],\n[[],[5],[7],[5],[7],[4],[5],[],[],[],[]]\nOutput: [null,null,null,null,null,null,null,5,7,5,4]\nExplanation:\nAfter making six .push operations, the stack is [5,7,5,7,4,5] from bottom to top.  Then:\n\npop() -&gt; returns 5, as 5 is the most frequent.\nThe stack becomes [5,7,5,7,4].\n\npop() -&gt; returns 7, as 5 and 7 is the most frequent, but 7 is closest to the top.\nThe stack becomes [5,7,5,4].\n\npop() -&gt; returns 5.\nThe stack becomes [5,7,4].\n\npop() -&gt; returns 4.\nThe stack becomes [5,7].\n\n\n&#xA0;\n\nNote:\n\n\n\tCalls to FreqStack.push(int x)&#xA0;will be such that 0 &lt;= x &lt;= 10^9.\n\tIt is guaranteed that FreqStack.pop() won&apos;t be called if the stack has zero elements.\n\tThe total number of FreqStack.push calls will not exceed 10000 in a single test case.\n\tThe total number of FreqStack.pop&#xA0;calls will not exceed 10000 in a single test case.\n\tThe total number of FreqStack.push and FreqStack.pop calls will not exceed 150000 across all test cases.\n\n\n\n&#xA0;\n\n",
    "code": "undefinedpublic class FreqStack {​    public FreqStack() {            }        public void Push(int x) {            }        public int Pop() {            }}​/** * Your FreqStack object will be instantiated and called as such: * FreqStack obj = new FreqStack(); * obj.Push(x); * int param_2 = obj.Pop(); */"
}