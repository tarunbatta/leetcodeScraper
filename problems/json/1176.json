{"number":"1176","title":"Diet Plan Performance","url":"https://leetcode.com/problems/diet-plan-performance","difficulty":"Easy","question":"A dieter consumes&#xA0;calories[i]&#xA0;calories on the i-th day.&#xA0;\n\nGiven an integer k, for every consecutive sequence of k days (calories[i], calories[i+1], ..., calories[i+k-1]&#xA0;for all 0 &lt;= i &lt;= n-k), they look at T, the total calories consumed during that sequence of k days (calories[i] + calories[i+1] + ... + calories[i+k-1]):\n\n\n\tIf T &lt; lower, they performed poorly on their diet and lose 1 point;&#xA0;\n\tIf T &gt; upper, they performed well on their diet and gain 1 point;\n\tOtherwise, they performed normally and there is no change in points.\n\n\nInitially, the dieter has zero points. Return the total number of points the dieter has after dieting for calories.length&#xA0;days.\n\nNote that the total points can be negative.\n\n&#xA0;\nExample 1:\n\nInput: calories = [1,2,3,4,5], k = 1, lower = 3, upper = 3\nOutput: 0\nExplanation: Since k = 1, we consider each element of the array separately and compare it to lower and upper.\ncalories[0] and calories[1] are less than lower so 2 points are lost.\ncalories[3] and calories[4] are greater than upper so 2 points are gained.\n\n\nExample 2:\n\nInput: calories = [3,2], k = 2, lower = 0, upper = 1\nOutput: 1\nExplanation: Since k = 2, we consider subarrays of length 2.\ncalories[0] + calories[1] &gt; upper so 1 point is gained.\n\n\nExample 3:\n\nInput: calories = [6,5,0,0], k = 2, lower = 1, upper = 5\nOutput: 0\nExplanation:\ncalories[0] + calories[1] &gt; upper so 1 point is gained.\nlower &lt;= calories[1] + calories[2] &lt;= upper so no change in points.\ncalories[2] + calories[3] &lt; lower so 1 point is lost.\n\n\n&#xA0;\nConstraints:\n\n\n\t1 &lt;= k &lt;= calories.length &lt;= 10^5\n\t0 &lt;= calories[i] &lt;= 20000\n\t0 &lt;= lower &lt;= upper\n\n","code":"undefinedpublic class Solution {    public int DietPlanPerformance(int[] calories, int k, int lower, int upper) {            }}"}