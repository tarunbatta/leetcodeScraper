{
    "number": "1023",
    "title": "Camelcase Matching",
    "url": "https://leetcode.com/problems/camelcase-matching",
    "difficulty": "Medium",
    "question": "A query word matches a given pattern if we can insert lowercase letters to the pattern word so that it equals the query. (We may insert each character at any position, and may insert 0 characters.)\n\nGiven a list of queries, and a pattern, return an answer list of booleans, where answer[i] is true if and only if queries[i] matches the pattern.\n\n&#xA0;\n\nExample 1:\n\nInput: queries = [&quot;FooBar&quot;,&quot;FooBarTest&quot;,&quot;FootBall&quot;,&quot;FrameBuffer&quot;,&quot;ForceFeedBack&quot;], pattern = &quot;FB&quot;\nOutput: [true,false,true,true,false]\nExplanation: \n&quot;FooBar&quot; can be generated like this &quot;F&quot; + &quot;oo&quot; + &quot;B&quot; + &quot;ar&quot;.\n&quot;FootBall&quot; can be generated like this &quot;F&quot; + &quot;oot&quot; + &quot;B&quot; + &quot;all&quot;.\n&quot;FrameBuffer&quot; can be generated like this &quot;F&quot; + &quot;rame&quot; + &quot;B&quot; + &quot;uffer&quot;.\n\nExample 2:\n\nInput: queries = [&quot;FooBar&quot;,&quot;FooBarTest&quot;,&quot;FootBall&quot;,&quot;FrameBuffer&quot;,&quot;ForceFeedBack&quot;], pattern = &quot;FoBa&quot;\nOutput: [true,false,true,false,false]\nExplanation: \n&quot;FooBar&quot; can be generated like this &quot;Fo&quot; + &quot;o&quot; + &quot;Ba&quot; + &quot;r&quot;.\n&quot;FootBall&quot; can be generated like this &quot;Fo&quot; + &quot;ot&quot; + &quot;Ba&quot; + &quot;ll&quot;.\n\n\nExample 3:\n\nInput: queries = [&quot;FooBar&quot;,&quot;FooBarTest&quot;,&quot;FootBall&quot;,&quot;FrameBuffer&quot;,&quot;ForceFeedBack&quot;], pattern = &quot;FoBaT&quot;\nOutput: [false,true,false,false,false]\nExplanation: \n&quot;FooBarTest&quot; can be generated like this &quot;Fo&quot; + &quot;o&quot; + &quot;Ba&quot; + &quot;r&quot; + &quot;T&quot; + &quot;est&quot;.\n\n\n&#xA0;\n\nNote:\n\n\n\t1 &lt;= queries.length &lt;= 100\n\t1 &lt;= queries[i].length &lt;= 100\n\t1 &lt;= pattern.length &lt;= 100\n\tAll strings consists only of lower and upper case English letters.\n",
    "code": "undefinedpublic class Solution {    public IList<bool> CamelMatch(string[] queries, string pattern) {            }}"
}