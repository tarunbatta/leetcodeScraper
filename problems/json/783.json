{
    "number": "783",
    "title": "Minimum Distance Between BST Nodes",
    "url": "https://leetcode.com/problems/minimum-distance-between-bst-nodes",
    "difficulty": "Easy",
    "question": "Given a Binary Search Tree (BST) with the root node root, return&#xA0;the minimum difference between the values of any two different nodes in the tree.\n\nExample :\n\nInput: root = [4,2,6,1,3,null,null]\nOutput: 1\nExplanation:\nNote that root is a TreeNode object, not an array.\n\nThe given tree [4,2,6,1,3,null,null] is represented by the following diagram:\n\n          4\n        /   \\\n      2      6\n     / \\    \n    1   3  \n\nwhile the minimum difference in this tree is 1, it occurs between node 1 and node 2, also between node 3 and node 2.\n\n\nNote:\n\n\n\tThe size of the BST will be between 2 and&#xA0;100.\n\tThe BST is always valid, each node&apos;s value is an integer, and each node&apos;s value is different.\n",
    "code": "undefined/** * Definition for a binary tree node. * public class TreeNode { *     public int val; *     public TreeNode left; *     public TreeNode right; *     public TreeNode(int x) { val = x; } * } */public class Solution {    public int MinDiffInBST(TreeNode root) {            }}"
}