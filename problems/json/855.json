{
    "number": "855",
    "title": "Exam Room",
    "url": "https://leetcode.com/problems/exam-room",
    "difficulty": "Medium",
    "question": "In an exam room, there are N seats in a single row, numbered 0, 1, 2, ..., N-1.\n\nWhen a student enters the room, they must sit in the seat that maximizes the distance to the closest person.&#xA0; If there are multiple such seats, they sit in the seat with the lowest number.&#xA0; (Also, if no one is in the room, then the student sits at seat number 0.)\n\nReturn a class ExamRoom(int N)&#xA0;that exposes two functions: ExamRoom.seat()&#xA0;returning an int&#xA0;representing what seat the student sat in, and ExamRoom.leave(int p)&#xA0;representing that the student in seat number p&#xA0;now leaves the room.&#xA0; It is guaranteed that any calls to ExamRoom.leave(p) have a student sitting in seat p.\n\n&#xA0;\n\nExample 1:\n\nInput: [&quot;ExamRoom&quot;,&quot;seat&quot;,&quot;seat&quot;,&quot;seat&quot;,&quot;seat&quot;,&quot;leave&quot;,&quot;seat&quot;], [[10],[],[],[],[],[4],[]]\nOutput: [null,0,9,4,2,null,5]\nExplanation:\nExamRoom(10) -&gt; null\nseat() -&gt; 0, no one is in the room, then the student sits at seat number 0.\nseat() -&gt; 9, the student sits at the last seat number 9.\nseat() -&gt; 4, the student sits at the last seat number 4.\nseat() -&gt; 2, the student sits at the last seat number 2.\nleave(4) -&gt; null\nseat() -&gt; 5, the student sits at the last seat number 5.\n\n\n&#x200B;&#x200B;&#x200B;&#x200B;&#x200B;&#x200B;&#x200B;\n\nNote:\n\n\n\t1 &lt;= N &lt;= 10^9\n\tExamRoom.seat() and ExamRoom.leave() will be called at most 10^4 times across all test cases.\n\tCalls to ExamRoom.leave(p) are guaranteed to have a student currently sitting in seat number p.\n\n",
    "code": "undefinedpublic class ExamRoom {​    public ExamRoom(int N) {            }        public int Seat() {            }        public void Leave(int p) {            }}​/** * Your ExamRoom object will be instantiated and called as such: * ExamRoom obj = new ExamRoom(N); * int param_1 = obj.Seat(); * obj.Leave(p); */"
}