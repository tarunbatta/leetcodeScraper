{
    "number": "964",
    "title": "Least Operators to Express Number",
    "url": "https://leetcode.com/problems/least-operators-to-express-number",
    "difficulty": "Hard",
    "question": "Given a single positive integer x, we will write an expression of the form x (op1) x (op2) x (op3) x ...&#xA0;where each operator op1, op2, etc. is either addition, subtraction, multiplication, or division (+, -, *, or /).&#xA0; For example, with x = 3, we might write 3 * 3 / 3 + 3 - 3&#xA0;which is a value of 3.\n\nWhen writing such an expression, we adhere to the following conventions:\n\n\n\tThe division operator (/) returns rational numbers.\n\tThere are no parentheses placed anywhere.\n\tWe use the usual order of operations: multiplication and division happens before addition and subtraction.\n\tIt&apos;s not allowed to use the unary negation&#xA0;operator (-).&#xA0; For example, &quot;x&#xA0;- x&quot;&#xA0;is a valid expression as it only uses subtraction, but &quot;-x +&#xA0;x&quot; is not because it uses negation.\n\n\nWe would like to write an expression with the least number of operators such that the expression equals the given target.&#xA0; Return the least number of operators used.\n\n&#xA0;\n\n\nExample 1:\n\nInput: x = 3, target = 19\nOutput: 5\nExplanation: 3 * 3 + 3 * 3 + 3 / 3.  The expression contains 5 operations.\n\n\nExample 2:\n\n\nInput: x = 5, target = 501\nOutput: 8\nExplanation: 5 * 5 * 5 * 5 - 5 * 5 * 5 + 5 / 5.  The expression contains 8 operations.\n\n\n\nExample 3:\n\nInput: x = 100, target = 100000000\nOutput: 3\nExplanation: 100 * 100 * 100 * 100.  The expression contains 3 operations.\n\n&#xA0;\n\n\n\n\nNote:\n\n\n\t2 &lt;= x &lt;= 100\n\t1 &lt;= target &lt;= 2 * 10^8\n\n\n\n\n&#xA0;\n\n\n",
    "code": "undefinedpublic class Solution {    public int LeastOpsExpressTarget(int x, int target) {            }}"
}