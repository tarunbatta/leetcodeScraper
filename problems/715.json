{"number":"715","title":"Range Module","url":"https://leetcode.com/problems/range-module","difficulty":"Hard","question":"A Range Module is a module that tracks ranges of numbers. Your task is to design and implement the following interfaces in an efficient manner.\n\naddRange(int left, int right) Adds the half-open interval [left, right), tracking every real number in that interval.  Adding an interval that partially overlaps with currently tracked numbers should add any numbers in the interval [left, right) that are not already tracked.\n\nqueryRange(int left, int right) Returns true if and only if every real number in the interval [left, right)\n is currently being tracked.\n\nremoveRange(int left, int right) Stops tracking every real number currently being tracked in the interval [left, right).\n\nExample 1:\naddRange(10, 20): null\nremoveRange(14, 16): null\nqueryRange(10, 14): true (Every number in [10, 14) is being tracked)\nqueryRange(13, 15): false (Numbers like 14, 14.03, 14.17 in [13, 15) are not being tracked)\nqueryRange(16, 17): true (The number 16 in [16, 17) is still being tracked, despite the remove operation)\n\n\n\nNote:\nA half open interval [left, right) denotes all real numbers left &lt;= x &lt; right.\n\n0 &lt; left &lt; right &lt; 10^9 in all calls to addRange, queryRange, removeRange.\nThe total number of calls to addRange in a single test case is at most 1000.\nThe total number of calls to queryRange in a single test case is at most 5000.\nThe total number of calls to removeRange in a single test case is at most 1000.\n","code":"undefinedpublic class RangeModule {​    public RangeModule() {            }        public void AddRange(int left, int right) {            }        public bool QueryRange(int left, int right) {            }        public void RemoveRange(int left, int right) {            }}​/** * Your RangeModule object will be instantiated and called as such: * RangeModule obj = new RangeModule(); * obj.AddRange(left,right); * bool param_2 = obj.QueryRange(left,right); * obj.RemoveRange(left,right); */"}